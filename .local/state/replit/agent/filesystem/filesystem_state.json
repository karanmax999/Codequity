{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# replit.md\n\n## Overview\n\nCodeQuity is a React-based single-page application for India's premier tech community. The project is a community website that showcases CodeQuity's mission to build India's largest tech community through innovation, collaboration, and excellence. The application features sections for community stats, events, about information, and contact details, all presented with a modern, tech-focused design using dark themes and neon effects.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Routing**: Wouter for lightweight client-side routing\n- **Build Tool**: Vite for fast development and optimized builds\n- **UI Library**: Radix UI components with shadcn/ui design system for accessible, customizable components\n- **Styling**: Tailwind CSS with custom CSS variables for theming and responsive design\n- **Animations**: Framer Motion for smooth animations and interactions\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Forms**: React Hook Form with Hookform Resolvers for form validation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **Development**: tsx for TypeScript execution in development\n- **Production Build**: esbuild for fast bundling and optimization\n- **Storage Interface**: Abstract storage interface with in-memory implementation (MemStorage)\n- **Database Ready**: Configured for PostgreSQL with Drizzle ORM integration\n\n### Database Design\n- **ORM**: Drizzle ORM with PostgreSQL dialect\n- **Schema Location**: Shared schema definitions in `/shared/schema.ts`\n- **Migrations**: Automated migration system with drizzle-kit\n- **Connection**: Neon Database serverless PostgreSQL integration\n- **Session Storage**: PostgreSQL session store with connect-pg-simple\n\n### Development Environment\n- **Hot Reload**: Vite development server with HMR\n- **Error Handling**: Runtime error overlay for development\n- **Code Quality**: TypeScript strict mode with comprehensive type checking\n- **Path Aliases**: Configured aliases for clean imports (`@/`, `@shared/`)\n- **Asset Management**: Centralized asset handling with dedicated attached_assets directory\n\n### Design System\n- **Theme**: Dark mode with cyberpunk/tech aesthetic\n- **Typography**: Multiple font families (Inter, Orbitron, JetBrains Mono)\n- **Colors**: CSS custom properties for consistent theming\n- **Components**: Modular component architecture with shadcn/ui base\n- **Responsive**: Mobile-first responsive design with Tailwind breakpoints\n\n### Deployment Configuration\n- **Build Process**: Separate client and server builds\n- **Static Assets**: Client builds to `/dist/public`\n- **Server Bundle**: ESM format bundle for production\n- **Environment Variables**: DATABASE_URL required for production\n- **Development Tools**: Replit-specific tooling and development banner integration\n\n## External Dependencies\n\n### Database & Storage\n- **Neon Database**: Serverless PostgreSQL hosting\n- **Drizzle ORM**: Type-safe database operations and migrations\n- **connect-pg-simple**: PostgreSQL session store for Express sessions\n\n### UI & Design\n- **Radix UI**: Headless UI components for accessibility\n- **Tailwind CSS**: Utility-first CSS framework\n- **Framer Motion**: Animation library for smooth interactions\n- **Lucide React**: Icon library for consistent iconography\n- **shadcn/ui**: Pre-built component library built on Radix UI\n\n### Development Tools\n- **Vite**: Development server and build tool\n- **TypeScript**: Type checking and development experience\n- **esbuild**: Fast bundling for production builds\n- **Replit Integration**: Development environment tooling and error overlays\n\n### Runtime & Server\n- **Express.js**: Web application framework\n- **TanStack Query**: Data fetching and caching\n- **React Hook Form**: Form handling and validation\n- **Zod**: Schema validation with drizzle-zod integration","size_bytes":4087},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        orbitron: [\"var(--font-orbitron)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        glow: {\n          \"0%\": {\n            boxShadow: \"0 0 20px rgba(0, 212, 255, 0.5)\",\n          },\n          \"100%\": {\n            boxShadow: \"0 0 30px rgba(0, 212, 255, 0.8), 0 0 40px rgba(0, 255, 255, 0.3)\",\n          },\n        },\n        float: {\n          \"0%, 100%\": {\n            transform: \"translateY(0px)\",\n          },\n          \"50%\": {\n            transform: \"translateY(-10px)\",\n          },\n        },\n        circuit: {\n          \"0%\": {\n            backgroundPosition: \"0 0, 0 0, 0 0, 0 0\",\n          },\n          \"100%\": {\n            backgroundPosition: \"50px 50px, 30px 30px, 20px 20px, 20px 20px\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        glow: \"glow 2s ease-in-out infinite alternate\",\n        float: \"float 3s ease-in-out infinite\",\n        circuit: \"circuit 4s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3599},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSubmissionSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      // Validate the request body\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      \n      // Save to storage\n      const submission = await storage.createContactSubmission(validatedData);\n      \n      res.status(201).json({ \n        success: true, \n        message: \"Contact submission received successfully!\",\n        id: submission.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation failed\", \n          errors: error.errors \n        });\n      } else {\n        console.error(\"Contact submission error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Get contact submissions (for admin purposes)\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const submissions = await storage.getContactSubmissions();\n      res.json({ success: true, data: submissions });\n    } catch (error) {\n      console.error(\"Error fetching contact submissions:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Internal server error\" \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":1677},"server/storage.ts":{"content":"import { type User, type InsertUser, type ContactSubmission, type InsertContactSubmission } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n  getContactSubmissions(): Promise<ContactSubmission[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contactSubmissions: Map<string, ContactSubmission>;\n\n  constructor() {\n    this.users = new Map();\n    this.contactSubmissions = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContactSubmission(insertSubmission: InsertContactSubmission): Promise<ContactSubmission> {\n    const id = randomUUID();\n    const submission: ContactSubmission = { \n      ...insertSubmission, \n      id,\n      createdAt: new Date()\n    };\n    this.contactSubmissions.set(id, submission);\n    return submission;\n  }\n\n  async getContactSubmissions(): Promise<ContactSubmission[]> {\n    return Array.from(this.contactSubmissions.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1828},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  subject: text(\"subject\").notNull(),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).pick({\n  firstName: true,\n  lastName: true,\n  email: true,\n  subject: true,\n  message: true,\n}).extend({\n  email: z.string().email(\"Please enter a valid email address\"),\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  subject: z.string().min(1, \"Subject is required\"),\n  message: z.string().min(10, \"Message must be at least 10 characters long\"),\n});\n\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":1650},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Events from \"@/pages/events\";\nimport Community from \"@/pages/community\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/events\" component={Events} />\n      <Route path=\"/community\" component={Community} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1059},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 7%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(240, 10%, 7%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 10%, 3.9%);\n  --secondary: hsl(240, 4%, 15%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 4%, 15%);\n  --muted-foreground: hsl(240, 5%, 64%);\n  --accent: hsl(180, 100%, 50%);\n  --accent-foreground: hsl(240, 10%, 3.9%);\n  --destructive: hsl(0, 85%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 6%, 20%);\n  --input: hsl(240, 6%, 20%);\n  --ring: hsl(195, 100%, 50%);\n  --chart-1: hsl(195, 100%, 50%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(240, 10%, 7%);\n  --sidebar-foreground: hsl(0, 0%, 98%);\n  --sidebar-primary: hsl(195, 100%, 50%);\n  --sidebar-primary-foreground: hsl(240, 10%, 3.9%);\n  --sidebar-accent: hsl(240, 4%, 15%);\n  --sidebar-accent-foreground: hsl(180, 100%, 50%);\n  --sidebar-border: hsl(240, 6%, 20%);\n  --sidebar-ring: hsl(195, 100%, 50%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --font-orbitron: 'Orbitron', monospace;\n  --radius: 0.75rem;\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 7%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(240, 10%, 7%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 10%, 3.9%);\n  --secondary: hsl(240, 4%, 15%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 4%, 15%);\n  --muted-foreground: hsl(240, 5%, 64%);\n  --accent: hsl(180, 100%, 50%);\n  --accent-foreground: hsl(240, 10%, 3.9%);\n  --destructive: hsl(0, 85%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 6%, 20%);\n  --input: hsl(240, 6%, 20%);\n  --ring: hsl(195, 100%, 50%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n    background: linear-gradient(135deg, #000000 0%, #0A0A0F 50%, #001122 100%);\n    overflow-x: hidden;\n  }\n}\n\n@layer components {\n  .hero-bg {\n    background: radial-gradient(circle at 50% 50%, rgba(0, 212, 255, 0.1) 0%, transparent 50%),\n                linear-gradient(135deg, #000000 0%, #0A0A0F 100%);\n  }\n\n  .circuit-pattern {\n    background-image: \n      radial-gradient(circle at 25% 25%, #00D4FF 2px, transparent 2px),\n      radial-gradient(circle at 75% 75%, #0080FF 1px, transparent 1px),\n      linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px),\n      linear-gradient(180deg, rgba(0, 128, 255, 0.1) 1px, transparent 1px);\n    background-size: 50px 50px, 30px 30px, 20px 20px, 20px 20px;\n    animation: circuit 20s linear infinite;\n  }\n\n  .glow-text {\n    text-shadow: 0 0 10px rgba(0, 212, 255, 0.5), 0 0 20px rgba(0, 212, 255, 0.3);\n  }\n\n  .neon-border {\n    border: 1px solid rgba(0, 212, 255, 0.3);\n    box-shadow: 0 0 20px rgba(0, 212, 255, 0.1);\n    transition: all 0.3s ease;\n  }\n\n  .neon-border:hover {\n    border-color: rgba(0, 212, 255, 0.8);\n    box-shadow: 0 0 30px rgba(0, 212, 255, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .stat-card {\n    background: linear-gradient(135deg, rgba(0, 212, 255, 0.1) 0%, rgba(0, 128, 255, 0.05) 100%);\n  }\n\n  .event-card {\n    background: linear-gradient(135deg, rgba(26, 26, 31, 0.8) 0%, rgba(0, 212, 255, 0.05) 100%);\n    backdrop-filter: blur(10px);\n  }\n\n  .nav-blur {\n    backdrop-filter: blur(20px);\n    background: rgba(10, 10, 15, 0.8);\n  }\n\n  .gradient-text {\n    background: linear-gradient(135deg, #00D4FF 0%, #0080FF 50%, #00FFFF 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .logo-brackets {\n    opacity: 0;\n    transform: rotateY(180deg) scale(0.5);\n  }\n\n  .logo-text {\n    opacity: 0;\n    transform: translateY(50px);\n    letter-spacing: 20px;\n  }\n\n  .hero-subtitle {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n\n  .hero-description {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n\n  .hero-buttons {\n    opacity: 0;\n    transform: scale(0);\n  }\n\n  .floating-particle {\n    transform-origin: center center;\n  }\n}\n\n@layer utilities {\n  .font-orbitron {\n    font-family: var(--font-orbitron);\n  }\n}\n\n@keyframes glow {\n  from { \n    box-shadow: 0 0 20px rgba(0, 212, 255, 0.5); \n  }\n  to { \n    box-shadow: 0 0 30px rgba(0, 212, 255, 0.8), 0 0 40px rgba(0, 255, 255, 0.3); \n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-10px); \n  }\n}\n\n@keyframes circuit {\n  0% { \n    background-position: 0 0, 0 0, 0 0, 0 0; \n  }\n  100% { \n    background-position: 50px 50px, 30px 30px, 20px 20px, 20px 20px; \n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(0, 212, 255, 0.4);\n    filter: brightness(1);\n  }\n  50% {\n    box-shadow: 0 0 40px rgba(0, 212, 255, 0.8), 0 0 60px rgba(0, 255, 255, 0.4);\n    filter: brightness(1.2);\n  }\n}\n\n@keyframes matrix-rain {\n  0% {\n    transform: translateY(-100%);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  90% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(100vh);\n    opacity: 0;\n  }\n}\n\n@keyframes magnetic-float {\n  0%, 100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  25% {\n    transform: translateY(-5px) rotate(1deg);\n  }\n  50% {\n    transform: translateY(-10px) rotate(0deg);\n  }\n  75% {\n    transform: translateY(-5px) rotate(-1deg);\n  }\n}\n\n.animate-glow {\n  animation: glow 2s ease-in-out infinite alternate;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-circuit {\n  animation: circuit 4s linear infinite;\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 3s ease-in-out infinite;\n}\n\n.animate-magnetic-float {\n  animation: magnetic-float 4s ease-in-out infinite;\n}\n\n/* Enhanced hover effects */\n.card-hover-effect {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  transform-style: preserve-3d;\n}\n\n.card-hover-effect:hover {\n  transform: translateY(-10px) rotateX(5deg) rotateY(5deg);\n  box-shadow: 0 20px 40px rgba(0, 212, 255, 0.3);\n}\n\n/* Advanced loading skeleton */\n.skeleton-loading {\n  background: linear-gradient(90deg, transparent, rgba(0, 212, 255, 0.1), transparent);\n  background-size: 200% 100%;\n  animation: skeleton-wave 1.5s infinite;\n}\n\n@keyframes skeleton-wave {\n  0% { background-position: -200% 0; }\n  100% { background-position: 200% 0; }\n}\n\n/* Zig-zag line animations */\n@keyframes zigzag-flow {\n  0% {\n    stroke-dasharray: 0, 1000;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 1000, 0;\n    stroke-dashoffset: -500;\n  }\n  100% {\n    stroke-dasharray: 0, 1000;\n    stroke-dashoffset: -1000;\n  }\n}\n\n.zigzag-line {\n  stroke-dasharray: 200, 50;\n  animation: zigzag-flow 8s ease-in-out infinite;\n}\n\n/* Modern minimalist effects */\n.glass-morphism {\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.minimal-card {\n  background: rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(0, 212, 255, 0.1);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.minimal-card:hover {\n  border-color: rgba(0, 212, 255, 0.3);\n  background: rgba(0, 0, 0, 0.3);\n  transform: translateY(-4px);\n}\n\n/* Sleek button styles */\n.sleek-button {\n  background: linear-gradient(135deg, rgba(0, 212, 255, 0.1), rgba(0, 128, 255, 0.1));\n  border: 1px solid rgba(0, 212, 255, 0.3);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n}\n\n.sleek-button:hover {\n  background: linear-gradient(135deg, rgba(0, 212, 255, 0.2), rgba(0, 128, 255, 0.2));\n  border-color: rgba(0, 212, 255, 0.5);\n  box-shadow: 0 8px 32px rgba(0, 212, 255, 0.2);\n}\n","size_bytes":8197},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Navigation from \"@/components/ui/navigation\";\nimport Footer from \"@/components/ui/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Target, Eye, Heart, Users, Code, Lightbulb, GraduationCap, Globe, Award, Rocket } from \"lucide-react\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function About() {\n  const heroRef = useRef<HTMLDivElement>(null);\n  const timelineRef = useRef<HTMLDivElement>(null);\n  const teamRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Hero animations\n      gsap.timeline()\n        .from(\".about-title\", {\n          rotationX: 90,\n          opacity: 0,\n          duration: 1.5,\n          ease: \"power4.out\"\n        })\n        .from(\".about-subtitle\", {\n          y: 100,\n          opacity: 0,\n          duration: 1.2,\n          ease: \"power3.out\"\n        }, \"-=0.8\")\n        .from(\".mission-cards\", {\n          scale: 0,\n          rotation: 180,\n          opacity: 0,\n          duration: 1,\n          stagger: 0.2,\n          ease: \"back.out(1.7)\"\n        }, \"-=0.5\");\n\n      // Timeline animation\n      gsap.from(\".timeline-item\", {\n        scrollTrigger: {\n          trigger: timelineRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        x: (index) => index % 2 === 0 ? -100 : 100,\n        opacity: 0,\n        duration: 1,\n        stagger: 0.3,\n        ease: \"power3.out\"\n      });\n\n      // Team cards with 3D effect\n      gsap.from(\".team-card\", {\n        scrollTrigger: {\n          trigger: teamRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        rotationY: 180,\n        opacity: 0,\n        duration: 1.2,\n        stagger: 0.15,\n        ease: \"power3.out\"\n      });\n\n      // Continuous animation for floating elements\n      gsap.to(\".floating-icon\", {\n        y: \"random(-20, 20)\",\n        x: \"random(-10, 10)\",\n        rotation: \"random(-15, 15)\",\n        duration: \"random(2, 4)\",\n        repeat: -1,\n        yoyo: true,\n        ease: \"sine.inOut\",\n        stagger: {\n          amount: 1,\n          from: \"random\"\n        }\n      });\n\n    }, heroRef);\n\n    return () => ctx.revert();\n  }, []);\n\n  const missionValues = [\n    {\n      icon: Target,\n      title: \"Our Mission\",\n      description: \"Building India's largest tech community through innovation, collaboration, and excellence.\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Eye,\n      title: \"Our Vision\",\n      description: \"To create a thriving ecosystem where every developer can learn, grow, and contribute to India's tech revolution.\",\n      color: \"text-accent\"\n    },\n    {\n      icon: Heart,\n      title: \"Our Values\",\n      description: \"Inclusivity, innovation, collaboration, and excellence drive everything we do in our community.\",\n      color: \"text-red-400\"\n    }\n  ];\n\n  const timeline = [\n    {\n      year: \"2020\",\n      title: \"Foundation\",\n      description: \"CodeQuity was founded with a vision to connect developers across India.\",\n      icon: Rocket,\n      side: \"left\"\n    },\n    {\n      year: \"2021\",\n      title: \"First Hackathon\",\n      description: \"Organized our first virtual hackathon with 100+ participants.\",\n      icon: Code,\n      side: \"right\"\n    },\n    {\n      year: \"2022\",\n      title: \"Community Growth\",\n      description: \"Expanded to 15+ states with 500+ active community members.\",\n      icon: Users,\n      side: \"left\"\n    },\n    {\n      year: \"2023\",\n      title: \"Major Events\",\n      description: \"Hosted 15+ events including workshops, bootcamps, and conferences.\",\n      icon: Award,\n      side: \"right\"\n    },\n    {\n      year: \"2024\",\n      title: \"Global Reach\",\n      description: \"Extended our community to 10+ countries with international partnerships.\",\n      icon: Globe,\n      side: \"left\"\n    }\n  ];\n\n  const team = [\n    {\n      name: \"Aditi Sharma\",\n      role: \"Founder & CEO\",\n      image: \"https://images.unsplash.com/photo-1494790108755-2616b62a6ae0?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Serial entrepreneur passionate about building inclusive tech communities.\",\n      expertise: [\"Community Building\", \"Leadership\", \"Strategy\"]\n    },\n    {\n      name: \"Rohit Kumar\",\n      role: \"CTO\",\n      image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Full-stack developer with 10+ years of experience in scalable systems.\",\n      expertise: [\"Full Stack\", \"Cloud Architecture\", \"DevOps\"]\n    },\n    {\n      name: \"Priya Verma\",\n      role: \"Head of Community\",\n      image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Community management expert dedicated to fostering inclusive environments.\",\n      expertise: [\"Community Management\", \"Event Planning\", \"Engagement\"]\n    },\n    {\n      name: \"Arjun Patel\",\n      role: \"Head of Events\",\n      image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Event management specialist with experience in large-scale tech conferences.\",\n      expertise: [\"Event Management\", \"Operations\", \"Logistics\"]\n    },\n    {\n      name: \"Sneha Gupta\",\n      role: \"Head of Partnerships\",\n      image: \"https://images.unsplash.com/photo-1554151228-14d9def656e4?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Business development expert focused on strategic partnerships and growth.\",\n      expertise: [\"Business Development\", \"Partnerships\", \"Growth\"]\n    },\n    {\n      name: \"Karan Singh\",\n      role: \"Head of Education\",\n      image: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n      bio: \"Education technology specialist creating impactful learning experiences.\",\n      expertise: [\"EdTech\", \"Curriculum Design\", \"Mentorship\"]\n    }\n  ];\n\n  const achievements = [\n    { label: \"Community Members\", value: \"500+\", icon: Users },\n    { label: \"Events Hosted\", value: \"25+\", icon: Award },\n    { label: \"States Covered\", value: \"25+\", icon: Globe },\n    { label: \"Industry Partners\", value: \"10+\", icon: Lightbulb }\n  ];\n\n  return (\n    <div className=\"min-h-screen\" ref={heroRef}>\n      <Navigation />\n      \n      {/* Floating Background Icons */}\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden opacity-5\">\n        {[Code, Users, Lightbulb, Globe, Award, Heart].map((Icon, i) => (\n          <Icon\n            key={i}\n            className=\"floating-icon absolute w-12 h-12 text-primary\"\n            style={{\n              left: `${Math.random() * 90 + 5}%`,\n              top: `${Math.random() * 90 + 5}%`,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"min-h-screen flex items-center justify-center hero-bg circuit-pattern relative overflow-hidden pt-20\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-black/50\"></div>\n        <div className=\"container mx-auto px-6 text-center relative z-10\">\n          <h1 className=\"about-title text-6xl md:text-8xl font-orbitron font-black gradient-text mb-8 glow-text\">\n            ABOUT US\n          </h1>\n          \n          <p className=\"about-subtitle text-2xl md:text-3xl text-muted-foreground mb-12 max-w-4xl mx-auto\">\n            Discover the story behind India's premier tech community and our journey \n            towards building a connected developer ecosystem.\n          </p>\n\n          {/* Mission, Vision, Values */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            {missionValues.map((item, index) => (\n              <div key={item.title} className=\"mission-cards stat-card neon-border rounded-xl p-8\">\n                <item.icon className={`w-12 h-12 ${item.color} mx-auto mb-4`} />\n                <h3 className=\"text-xl font-orbitron font-semibold mb-4\">{item.title}</h3>\n                <p className=\"text-muted-foreground text-sm leading-relaxed\">{item.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story Timeline */}\n      <section className=\"py-20 bg-gradient-to-b from-background to-card\" ref={timelineRef}>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Our <span className=\"gradient-text\">Journey</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              From a small idea to India's fastest-growing tech community.\n            </p>\n          </div>\n\n          <div className=\"relative max-w-4xl mx-auto\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 h-full w-1 bg-gradient-to-b from-primary via-accent to-primary opacity-30\"></div>\n            \n            {timeline.map((item, index) => (\n              <div\n                key={item.year}\n                className={`timeline-item relative flex items-center mb-16 ${\n                  item.side === 'left' ? 'flex-row-reverse' : 'flex-row'\n                }`}\n                data-testid={`timeline-item-${item.year}`}\n              >\n                {/* Content Card */}\n                <div className={`w-5/12 ${item.side === 'left' ? 'text-right' : 'text-left'}`}>\n                  <div className=\"neon-border rounded-xl p-6 bg-card/50 backdrop-blur-sm\">\n                    <div className=\"text-3xl font-orbitron font-bold gradient-text mb-2\">\n                      {item.year}\n                    </div>\n                    <h3 className=\"text-xl font-semibold mb-3\">{item.title}</h3>\n                    <p className=\"text-muted-foreground\">{item.description}</p>\n                  </div>\n                </div>\n                \n                {/* Timeline Node */}\n                <div className=\"w-2/12 flex justify-center\">\n                  <div className=\"w-16 h-16 rounded-full bg-gradient-to-r from-primary to-accent flex items-center justify-center neon-border\">\n                    <item.icon className=\"w-8 h-8 text-white\" />\n                  </div>\n                </div>\n                \n                {/* Spacer */}\n                <div className=\"w-5/12\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership Team */}\n      <section className=\"py-20 circuit-pattern\" ref={teamRef}>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Meet Our <span className=\"gradient-text\">Team</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Passionate leaders driving innovation and community growth across India.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {team.map((member, index) => (\n              <div\n                key={member.name}\n                className=\"team-card neon-border rounded-xl overflow-hidden bg-card/50 backdrop-blur-sm\"\n                data-testid={`team-member-${index}`}\n              >\n                <div className=\"relative\">\n                  <img\n                    src={member.image}\n                    alt={member.name}\n                    className=\"w-full h-64 object-cover\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent\"></div>\n                  <div className=\"absolute bottom-4 left-4 right-4\">\n                    <h3 className=\"text-xl font-orbitron font-semibold mb-1\">{member.name}</h3>\n                    <p className=\"text-accent font-medium\">{member.role}</p>\n                  </div>\n                </div>\n                \n                <div className=\"p-6\">\n                  <p className=\"text-muted-foreground mb-4 text-sm\">{member.bio}</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {member.expertise.map((skill) => (\n                      <span\n                        key={skill}\n                        className=\"px-3 py-1 bg-primary/20 text-primary rounded-full text-xs font-medium border border-primary/30\"\n                      >\n                        {skill}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Achievements */}\n      <section className=\"py-20 bg-gradient-to-b from-card to-background\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Our <span className=\"gradient-text\">Achievements</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Milestones that showcase our community's growth and impact.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 max-w-4xl mx-auto mb-12\">\n            {achievements.map((achievement) => (\n              <div key={achievement.label} className=\"text-center\">\n                <achievement.icon className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <div className=\"text-4xl font-orbitron font-bold gradient-text mb-2\">\n                  {achievement.value}\n                </div>\n                <div className=\"text-muted-foreground\">{achievement.label}</div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"text-center\">\n            <Button\n              className=\"bg-primary text-primary-foreground px-8 py-4 font-orbitron font-semibold hover:bg-primary/90 neon-border\"\n              data-testid=\"button-join-mission\"\n            >\n              Join Our Mission\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14460},"client/src/pages/community.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Navigation from \"@/components/ui/navigation\";\nimport Footer from \"@/components/ui/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Users, MapPin, Star, Award, Heart, Code, Lightbulb, GraduationCap, Globe, Zap } from \"lucide-react\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function Community() {\n  const heroRef = useRef<HTMLDivElement>(null);\n  const ambassadorsRef = useRef<HTMLDivElement>(null);\n  const statesRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Hero animation\n      gsap.timeline()\n        .from(\".community-title\", {\n          scale: 0.5,\n          opacity: 0,\n          duration: 1.5,\n          ease: \"elastic.out(1, 0.5)\"\n        })\n        .from(\".community-subtitle\", {\n          y: 50,\n          opacity: 0,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"-=0.8\")\n        .from(\".community-stats\", {\n          y: 100,\n          opacity: 0,\n          duration: 1,\n          stagger: 0.1,\n          ease: \"back.out(1.7)\"\n        }, \"-=0.5\");\n\n      // Ambassador cards with magnetic effect\n      gsap.set(\".ambassador-card\", { transformOrigin: \"center center\" });\n      \n      gsap.from(\".ambassador-card\", {\n        scrollTrigger: {\n          trigger: ambassadorsRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        scale: 0,\n        rotation: 360,\n        opacity: 0,\n        duration: 1,\n        stagger: 0.15,\n        ease: \"back.out(1.7)\"\n      });\n\n      // States map animation\n      gsap.from(\".state-marker\", {\n        scrollTrigger: {\n          trigger: statesRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        scale: 0,\n        opacity: 0,\n        duration: 0.8,\n        stagger: {\n          amount: 0.5,\n          from: \"random\"\n        },\n        ease: \"elastic.out(1, 0.3)\"\n      });\n\n      // Parallax effect for background elements\n      gsap.to(\".parallax-slow\", {\n        yPercent: -50,\n        ease: \"none\",\n        scrollTrigger: {\n          trigger: \"body\",\n          start: \"top bottom\",\n          end: \"bottom top\",\n          scrub: true\n        }\n      });\n\n      gsap.to(\".parallax-fast\", {\n        yPercent: -100,\n        ease: \"none\",\n        scrollTrigger: {\n          trigger: \"body\",\n          start: \"top bottom\",\n          end: \"bottom top\",\n          scrub: true\n        }\n      });\n\n    }, heroRef);\n\n    return () => ctx.revert();\n  }, []);\n\n  const communityStats = [\n    { label: \"Active Members\", value: \"500+\", icon: Users, color: \"text-primary\" },\n    { label: \"States Covered\", value: \"25+\", icon: MapPin, color: \"text-accent\" },\n    { label: \"Community Rating\", value: \"4.9★\", icon: Star, color: \"text-yellow-400\" },\n    { label: \"Total Events\", value: \"25+\", icon: Award, color: \"text-primary\" }\n  ];\n\n  const ambassadors = [\n    {\n      name: \"Arjun Sharma\",\n      city: \"Delhi\",\n      role: \"Lead Ambassador\",\n      specialization: \"Full Stack Development\",\n      avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 12,\n      rating: 4.9\n    },\n    {\n      name: \"Priya Patel\",\n      city: \"Mumbai\",\n      role: \"Technical Ambassador\",\n      specialization: \"AI/ML Engineering\",\n      avatar: \"https://images.unsplash.com/photo-1494790108755-2616b62a6ae0?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 8,\n      rating: 4.8\n    },\n    {\n      name: \"Rahul Verma\",\n      city: \"Bangalore\",\n      role: \"Community Ambassador\",\n      specialization: \"DevOps & Cloud\",\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 15,\n      rating: 4.9\n    },\n    {\n      name: \"Sneha Gupta\",\n      city: \"Chennai\",\n      role: \"Events Ambassador\",\n      specialization: \"Mobile Development\",\n      avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 10,\n      rating: 4.7\n    },\n    {\n      name: \"Karan Singh\",\n      city: \"Pune\",\n      role: \"Technical Ambassador\",\n      specialization: \"Web3 & Blockchain\",\n      avatar: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 9,\n      rating: 4.8\n    },\n    {\n      name: \"Anita Reddy\",\n      city: \"Hyderabad\",\n      role: \"Community Ambassador\",\n      specialization: \"Data Science\",\n      avatar: \"https://images.unsplash.com/photo-1554151228-14d9def656e4?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      events: 7,\n      rating: 4.6\n    }\n  ];\n\n  const features = [\n    {\n      icon: Code,\n      title: \"Connect & Collaborate\",\n      description: \"Join a vibrant community of developers, designers, and tech enthusiasts across India.\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Lightbulb,\n      title: \"Learn & Grow\",\n      description: \"Access exclusive workshops, bootcamps, and learning resources from industry experts.\",\n      color: \"text-accent\"\n    },\n    {\n      icon: GraduationCap,\n      title: \"Skill Development\",\n      description: \"Enhance your technical skills through hands-on projects and mentorship programs.\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Globe,\n      title: \"Global Network\",\n      description: \"Connect with international developers and access global opportunities.\",\n      color: \"text-accent\"\n    },\n    {\n      icon: Zap,\n      title: \"Innovation Hub\",\n      description: \"Be part of cutting-edge projects and innovative solutions for real-world problems.\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Heart,\n      title: \"Inclusive Community\",\n      description: \"Join a supportive environment welcoming developers of all backgrounds and skill levels.\",\n      color: \"text-red-400\"\n    }\n  ];\n\n  const indianStates = [\n    \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \n    \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\",\n    \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\",\n    \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \n    \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"\n  ];\n\n  return (\n    <div className=\"min-h-screen\" ref={heroRef}>\n      <Navigation />\n      \n      {/* Parallax Background Elements */}\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\n        <div className=\"parallax-slow absolute inset-0 opacity-10\">\n          {[...Array(15)].map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute w-2 h-2 bg-gradient-to-r from-primary to-accent rounded-full\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                animationDelay: `${Math.random() * 5}s`\n              }}\n            />\n          ))}\n        </div>\n        <div className=\"parallax-fast absolute inset-0 opacity-5\">\n          {[...Array(10)].map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute w-1 h-20 bg-gradient-to-b from-primary/30 to-transparent\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                transform: `rotate(${Math.random() * 360}deg)`\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"min-h-screen flex items-center justify-center hero-bg circuit-pattern relative overflow-hidden pt-20\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-black/50\"></div>\n        <div className=\"container mx-auto px-6 text-center relative z-10\">\n          <h1 className=\"community-title text-6xl md:text-8xl font-orbitron font-black gradient-text mb-8 glow-text\">\n            COMMUNITY\n          </h1>\n          \n          <p className=\"community-subtitle text-2xl md:text-3xl text-muted-foreground mb-12 max-w-4xl mx-auto\">\n            Join India's most vibrant tech community. Connect, learn, and grow with \n            passionate developers across the nation.\n          </p>\n\n          {/* Community Stats */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 max-w-5xl mx-auto\">\n            {communityStats.map((stat, index) => (\n              <div key={stat.label} className=\"community-stats stat-card neon-border rounded-xl p-6\">\n                <stat.icon className={`w-8 h-8 ${stat.color} mx-auto mb-2`} />\n                <div className=\"text-3xl font-orbitron font-bold gradient-text mb-1\">\n                  {stat.value}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Community Features */}\n      <section className=\"py-20 bg-gradient-to-b from-background to-card\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Why Join <span className=\"gradient-text\">CodeQuity?</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Discover the benefits of being part of India's fastest-growing tech community.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => (\n              <div\n                key={feature.title}\n                className=\"neon-border rounded-xl p-8 bg-card/50 backdrop-blur-sm hover:scale-105 transition-transform duration-300\"\n                data-testid={`feature-card-${feature.title.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <feature.icon className={`w-12 h-12 ${feature.color} mb-4`} />\n                <h3 className=\"text-xl font-orbitron font-semibold mb-4\">{feature.title}</h3>\n                <p className=\"text-muted-foreground\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Community Ambassadors */}\n      <section className=\"py-20 circuit-pattern\" ref={ambassadorsRef}>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Meet Our <span className=\"gradient-text\">Ambassadors</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Passionate leaders driving community growth across India.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {ambassadors.map((ambassador, index) => (\n              <div\n                key={ambassador.name}\n                className=\"ambassador-card neon-border rounded-xl overflow-hidden bg-card/50 backdrop-blur-sm hover:scale-105 transition-transform duration-300\"\n                data-testid={`ambassador-card-${index}`}\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-center gap-4 mb-4\">\n                    <img\n                      src={ambassador.avatar}\n                      alt={ambassador.name}\n                      className=\"w-16 h-16 rounded-full object-cover neon-border\"\n                    />\n                    <div>\n                      <h3 className=\"text-xl font-orbitron font-semibold\">{ambassador.name}</h3>\n                      <p className=\"text-sm text-accent\">{ambassador.role}</p>\n                      <p className=\"text-sm text-muted-foreground flex items-center gap-1\">\n                        <MapPin className=\"w-3 h-3\" />\n                        {ambassador.city}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-sm text-muted-foreground mb-4\">{ambassador.specialization}</p>\n                  \n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"text-sm\">\n                      <span className=\"text-primary font-semibold\">{ambassador.events}</span>\n                      <span className=\"text-muted-foreground\"> events</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\n                      <span className=\"text-sm font-semibold\">{ambassador.rating}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* States Coverage */}\n      <section className=\"py-20 bg-gradient-to-b from-card to-background\" ref={statesRef}>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Pan-India <span className=\"gradient-text\">Presence</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              From Kashmir to Kanyakumari, our community spans across 25+ Indian states.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4\">\n            {indianStates.map((state, index) => (\n              <div\n                key={state}\n                className=\"state-marker neon-border rounded-lg p-4 bg-card/30 backdrop-blur-sm text-center hover:bg-card/50 transition-all duration-300\"\n                data-testid={`state-${state.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <div className=\"text-sm font-medium\">{state}</div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Button\n              className=\"bg-primary text-primary-foreground px-8 py-4 font-orbitron font-semibold hover:bg-primary/90 neon-border\"\n              data-testid=\"button-join-community\"\n            >\n              Join Our Community\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14663},"client/src/pages/contact.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport emailjs from \"@emailjs/browser\";\nimport Navigation from \"@/components/ui/navigation\";\nimport Footer from \"@/components/ui/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Mail, \n  Phone, \n  MapPin, \n  Send, \n  MessageCircle, \n  Users, \n  Code,\n  Twitter,\n  Github,\n  Linkedin,\n  Instagram,\n  CheckCircle,\n  Loader2\n} from \"lucide-react\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function Contact() {\n  const heroRef = useRef<HTMLDivElement>(null);\n  const formRef = useRef<HTMLDivElement>(null);\n  const contactFormRef = useRef<HTMLFormElement>(null);\n  const { toast } = useToast();\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\"\n  });\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Hero animations\n      const tl = gsap.timeline();\n      \n      tl.from(\".contact-hero-title\", {\n        y: 100,\n        opacity: 0,\n        duration: 1.2,\n        ease: \"power4.out\"\n      })\n      .from(\".contact-hero-subtitle\", {\n        y: 50,\n        opacity: 0,\n        duration: 1,\n        ease: \"power3.out\"\n      }, \"-=0.5\")\n      .from(\".contact-hero-description\", {\n        y: 30,\n        opacity: 0,\n        duration: 0.8,\n        ease: \"power3.out\"\n      }, \"-=0.3\");\n\n      // Contact cards animation\n      gsap.from(\".contact-card\", {\n        scrollTrigger: {\n          trigger: formRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        y: 80,\n        opacity: 0,\n        rotation: 5,\n        duration: 1,\n        stagger: 0.2,\n        ease: \"back.out(1.7)\"\n      });\n\n      // Form animation\n      gsap.from(\".contact-form\", {\n        scrollTrigger: {\n          trigger: formRef.current,\n          start: \"top 70%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        x: 100,\n        opacity: 0,\n        duration: 1.2,\n        ease: \"power4.out\"\n      });\n\n      // Social links animation\n      gsap.from(\".social-link\", {\n        scrollTrigger: {\n          trigger: formRef.current,\n          start: \"top 60%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        scale: 0,\n        opacity: 0,\n        rotation: 180,\n        duration: 0.8,\n        stagger: 0.1,\n        ease: \"back.out(1.7)\"\n      });\n\n    }, heroRef);\n\n    return () => ctx.revert();\n  }, []);\n\n  const contactInfo = [\n    {\n      icon: Mail,\n      title: \"Email Us\",\n      description: \"Get in touch with our team\",\n      value: \"hello@codequity.in\",\n      action: \"mailto:hello@codequity.in\"\n    },\n    {\n      icon: Phone,\n      title: \"Call Us\",\n      description: \"Speak with our community managers\",\n      value: \"+91 98765 43210\",\n      action: \"tel:+919876543210\"\n    },\n    {\n      icon: MapPin,\n      title: \"Visit Us\",\n      description: \"Find us across major Indian cities\",\n      value: \"Delhi, Mumbai, Bangalore\",\n      action: \"#\"\n    },\n    {\n      icon: MessageCircle,\n      title: \"WhatsApp Group\",\n      description: \"Join our active community\",\n      value: \"WhatsApp Community\",\n      action: \"https://chat.whatsapp.com/HgPHH53f1v9HV75YOscich\"\n    }\n  ];\n\n  const socialLinks = [\n    { icon: Twitter, href: \"https://x.com/CodeQuity\", label: \"Twitter\" },\n    { icon: Github, href: \"https://github.com/codequity\", label: \"GitHub\" },\n    { icon: Linkedin, href: \"https://www.linkedin.com/company/codequitycommunity/\", label: \"LinkedIn\" },\n    { icon: Instagram, href: \"https://www.instagram.com/codequity_official/\", label: \"Instagram\" }\n  ];\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!contactFormRef.current) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Initialize EmailJS\n      emailjs.init(import.meta.env.VITE_EMAILJS_PUBLIC_KEY);\n      \n      // Send email using EmailJS\n      const result = await emailjs.sendForm(\n        import.meta.env.VITE_EMAILJS_SERVICE_ID,\n        import.meta.env.VITE_EMAILJS_TEMPLATE_ID,\n        contactFormRef.current,\n        import.meta.env.VITE_EMAILJS_PUBLIC_KEY\n      );\n      \n      if (result.status === 200) {\n        setIsSubmitted(true);\n        setFormData({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          subject: \"\",\n          message: \"\"\n        });\n        \n        toast({\n          title: \"Message sent successfully! 🎉\",\n          description: \"We'll get back to you within 24 hours.\",\n        });\n        \n        // Reset form after 3 seconds\n        setTimeout(() => {\n          setIsSubmitted(false);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error(\"EmailJS error:\", error);\n      toast({\n        title: \"Failed to send message\",\n        description: \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\" ref={heroRef}>\n      <Navigation />\n      \n      {/* Animated Zig-Zag Lines */}\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\n        <svg className=\"absolute inset-0 w-full h-full\">\n          <defs>\n            <linearGradient id=\"zigzagGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0, 212, 255, 0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0, 212, 255, 0.4)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0, 212, 255, 0)\" />\n            </linearGradient>\n          </defs>\n          \n          {/* Zig-zag lines */}\n          {[...Array(6)].map((_, i) => (\n            <path\n              key={i}\n              className=\"zigzag-line\"\n              d={`M ${-100 + i * 220},${80 + i * 110} Q ${120 + i * 220},${180 + i * 110} ${340 + i * 220},${80 + i * 110} T ${680 + i * 220},${80 + i * 110}`}\n              stroke=\"url(#zigzagGradient)\"\n              strokeWidth=\"1.5\"\n              fill=\"none\"\n              opacity=\"0.25\"\n              style={{\n                animationDelay: `${i * 0.7}s`,\n              }}\n            />\n          ))}\n        </svg>\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"min-h-screen flex items-center justify-center hero-bg circuit-pattern relative overflow-hidden pt-20\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-black/50\"></div>\n        \n        <div className=\"container mx-auto px-6 text-center relative z-10\">\n          <div className=\"max-w-4xl mx-auto\">\n            <h1 className=\"contact-hero-title text-5xl md:text-7xl font-orbitron font-bold mb-6\">\n              Get In <span className=\"gradient-text\">Touch</span>\n            </h1>\n            <p className=\"contact-hero-subtitle text-xl md:text-2xl text-muted-foreground mb-6\">\n              Connect with India's Premier Tech Community\n            </p>\n            <p className=\"contact-hero-description text-lg text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Whether you're looking to join our community, partner with us, or have questions about our events, \n              we'd love to hear from you. Let's build the future of Indian tech together! 🇮🇳\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section className=\"py-20 relative\" ref={formRef}>\n        <div className=\"container mx-auto px-6\">\n          \n          {/* Contact Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-20\">\n            {contactInfo.map((info, index) => (\n              <div\n                key={index}\n                className=\"contact-card group relative overflow-hidden rounded-2xl bg-card/40 backdrop-blur-xl border border-white/10 hover:border-primary/30 transition-all duration-500 hover:scale-105\"\n                data-testid={`contact-card-${index}`}\n              >\n                <div className=\"p-8 text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-6 bg-gradient-to-r from-primary/20 to-accent/20 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                    <info.icon className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <h3 className=\"text-xl font-orbitron font-semibold mb-3\">{info.title}</h3>\n                  <p className=\"text-muted-foreground text-sm mb-4\">{info.description}</p>\n                  <a\n                    href={info.action}\n                    className=\"text-primary hover:text-accent font-medium transition-colors\"\n                    data-testid={`contact-link-${index}`}\n                  >\n                    {info.value}\n                  </a>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Main Contact Form and Info */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16\">\n            \n            {/* Contact Form */}\n            <div className=\"contact-form\">\n              <div className=\"bg-card/40 backdrop-blur-xl border border-white/10 rounded-2xl p-8\">\n                <h2 className=\"text-3xl font-orbitron font-bold mb-6\">\n                  Send us a <span className=\"gradient-text\">Message</span>\n                </h2>\n                <p className=\"text-muted-foreground mb-8\">\n                  Fill out the form below and we'll get back to you within 24 hours.\n                </p>\n                \n                <form \n                  ref={contactFormRef}\n                  onSubmit={handleSubmit}\n                  className=\"space-y-6\" \n                  data-testid=\"contact-form\"\n                >\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">First Name</label>\n                      <Input \n                        type=\"text\" \n                        name=\"firstName\"\n                        value={formData.firstName}\n                        onChange={handleInputChange}\n                        placeholder=\"Your first name\"\n                        className=\"bg-background/50 border-white/20 focus:border-primary\"\n                        data-testid=\"input-first-name\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">Last Name</label>\n                      <Input \n                        type=\"text\" \n                        name=\"lastName\"\n                        value={formData.lastName}\n                        onChange={handleInputChange}\n                        placeholder=\"Your last name\"\n                        className=\"bg-background/50 border-white/20 focus:border-primary\"\n                        data-testid=\"input-last-name\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Email</label>\n                    <Input \n                      type=\"email\" \n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      placeholder=\"your.email@example.com\"\n                      className=\"bg-background/50 border-white/20 focus:border-primary\"\n                      data-testid=\"input-email\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Subject</label>\n                    <Input \n                      type=\"text\" \n                      name=\"subject\"\n                      value={formData.subject}\n                      onChange={handleInputChange}\n                      placeholder=\"What's this about?\"\n                      className=\"bg-background/50 border-white/20 focus:border-primary\"\n                      data-testid=\"input-subject\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Message</label>\n                    <Textarea \n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      placeholder=\"Tell us more about your inquiry...\"\n                      rows={6}\n                      className=\"bg-background/50 border-white/20 focus:border-primary resize-none\"\n                      data-testid=\"textarea-message\"\n                      required\n                      minLength={10}\n                    />\n                  </div>\n                  \n                  <Button \n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-primary to-accent text-white font-medium py-3 rounded-xl hover:opacity-90 transition-opacity disabled:opacity-50\"\n                    data-testid=\"button-send-message\"\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 mr-2 animate-spin\" />\n                        Sending...\n                      </>\n                    ) : isSubmitted ? (\n                      <>\n                        <CheckCircle className=\"w-5 h-5 mr-2\" />\n                        Message Sent!\n                      </>\n                    ) : (\n                      <>\n                        <Send className=\"w-5 h-5 mr-2\" />\n                        Send Message\n                      </>\n                    )}\n                  </Button>\n                </form>\n              </div>\n            </div>\n\n            {/* Community Info */}\n            <div className=\"space-y-8\">\n              <div className=\"bg-card/40 backdrop-blur-xl border border-white/10 rounded-2xl p-8\">\n                <h3 className=\"text-2xl font-orbitron font-bold mb-6\">\n                  Join Our <span className=\"gradient-text\">Community</span>\n                </h3>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-primary/20 rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <Users className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Active Community</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Join 3000+ developers, designers, and tech enthusiasts from across India.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-accent/20 rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <Code className=\"w-6 h-6 text-accent\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Learning Together</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Participate in workshops, hackathons, and collaborative coding sessions.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-primary/20 rounded-xl flex items-center justify-center flex-shrink-0\">\n                      <MessageCircle className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Open Communication</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Connect with like-minded individuals and industry experts in real-time.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Social Links */}\n              <div className=\"bg-card/40 backdrop-blur-xl border border-white/10 rounded-2xl p-8\">\n                <h3 className=\"text-xl font-orbitron font-bold mb-6\">Follow Us</h3>\n                <div className=\"flex gap-4\">\n                  {socialLinks.map((social, index) => (\n                    <a\n                      key={index}\n                      href={social.href}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"social-link w-12 h-12 bg-gradient-to-r from-primary/20 to-accent/20 rounded-xl flex items-center justify-center hover:scale-110 transition-transform duration-300\"\n                      data-testid={`social-link-${social.label.toLowerCase()}`}\n                    >\n                      <social.icon className=\"w-5 h-5 text-primary\" />\n                    </a>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":17971},"client/src/pages/events.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Navigation from \"@/components/ui/navigation\";\nimport Footer from \"@/components/ui/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Calendar, MapPin, Clock, Users, Trophy, Code2, Video, Wifi, Play, Download } from \"lucide-react\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function Events() {\n  const heroRef = useRef<HTMLDivElement>(null);\n  const titleRef = useRef<HTMLHeadingElement>(null);\n  const cardsRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Hero entrance animation\n      gsap.timeline()\n        .from(titleRef.current, {\n          y: 100,\n          opacity: 0,\n          duration: 1.5,\n          ease: \"power4.out\"\n        })\n        .from(\".hero-subtitle\", {\n          y: 50,\n          opacity: 0,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"-=0.8\")\n        .from(\".hero-stats\", {\n          scale: 0,\n          opacity: 0,\n          duration: 0.8,\n          stagger: 0.1,\n          ease: \"back.out(1.7)\"\n        }, \"-=0.5\");\n\n      // Cards animation with ScrollTrigger\n      gsap.from(\".event-card\", {\n        scrollTrigger: {\n          trigger: cardsRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        y: 100,\n        opacity: 0,\n        rotation: 10,\n        duration: 1,\n        stagger: 0.2,\n        ease: \"power3.out\"\n      });\n\n      // Zigzag lines animation\n      gsap.to(\".zigzag-line\", {\n        strokeDashoffset: -1000,\n        duration: 8,\n        repeat: -1,\n        ease: \"none\",\n        stagger: 0.5\n      });\n\n    }, heroRef);\n\n    return () => ctx.revert();\n  }, []);\n\n  const upcomingEvents = [\n    {\n      id: 1,\n      title: \"CodeQuity Mega Hackathon 2024\",\n      date: \"March 15-17, 2024\",\n      time: \"48 Hours\",\n      location: \"Hybrid - Delhi & Virtual\",\n      participants: \"500+\",\n      prize: \"₹5,00,000\",\n      description: \"The biggest hackathon of the year featuring AI/ML, Web3, and Mobile Development tracks.\",\n      type: \"Hackathon\",\n      status: \"Registration Open\",\n      image: \"https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 2,\n      title: \"AI/ML Masterclass Series\",\n      date: \"March 22-24, 2024\",\n      time: \"3 Days\",\n      location: \"Bangalore\",\n      participants: \"200+\",\n      prize: \"Certificates\",\n      description: \"Learn from industry experts at Google, Microsoft, and Amazon about cutting-edge AI/ML technologies.\",\n      type: \"Workshop\",\n      status: \"Early Bird\",\n      image: \"https://images.unsplash.com/photo-1531482615713-2afd69097998?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 3,\n      title: \"Web3 Developer Bootcamp\",\n      date: \"April 5-7, 2024\",\n      time: \"3 Days\",\n      location: \"Mumbai\",\n      participants: \"150+\",\n      prize: \"NFT Certificates\",\n      description: \"Intensive bootcamp covering blockchain development, smart contracts, and DeFi protocols.\",\n      type: \"Bootcamp\",\n      status: \"Coming Soon\",\n      image: \"https://images.unsplash.com/photo-1639762681485-074b7f938ba0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    }\n  ];\n\n  const ongoingEvents = [\n    {\n      id: 4,\n      title: \"30-Day Code Challenge\",\n      date: \"Feb 1 - Mar 2, 2024\",\n      time: \"Daily\",\n      location: \"Virtual\",\n      participants: \"1200+\",\n      description: \"Daily coding challenges to sharpen your skills across multiple programming languages.\",\n      type: \"Challenge\",\n      status: \"Live Now\",\n      progress: 75,\n      image: \"https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 5,\n      title: \"Weekly Tech Talks\",\n      date: \"Every Friday\",\n      time: \"7:00 PM IST\",\n      location: \"Discord Live\",\n      participants: \"300+\",\n      description: \"Industry experts share insights on latest technologies and career guidance.\",\n      type: \"Tech Talk\",\n      status: \"Live Now\",\n      progress: 100,\n      image: \"https://images.unsplash.com/photo-1515187029135-18ee286d815b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 6,\n      title: \"Open Source Sprint\",\n      date: \"Feb 15 - Mar 15, 2024\",\n      time: \"1 Month\",\n      location: \"GitHub\",\n      participants: \"800+\",\n      description: \"Contribute to open source projects and earn recognition in the developer community.\",\n      type: \"Sprint\",\n      status: \"Live Now\",\n      progress: 60,\n      image: \"https://images.unsplash.com/photo-1556075798-4825dfaaf498?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    }\n  ];\n\n  const webinars = [\n    {\n      id: 7,\n      title: \"Future of AI in Software Development\",\n      date: \"March 10, 2024\",\n      time: \"6:00 PM IST\",\n      location: \"Zoom\",\n      speaker: \"Dr. Priya Sharma, Google AI\",\n      participants: \"500+\",\n      description: \"Explore how AI is revolutionizing software development and what it means for developers.\",\n      type: \"Webinar\",\n      status: \"Register Now\",\n      image: \"https://images.unsplash.com/photo-1485827404703-89b55fcc595e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 8,\n      title: \"Building Scalable Microservices\",\n      date: \"March 17, 2024\",\n      time: \"7:00 PM IST\",\n      location: \"YouTube Live\",\n      speaker: \"Rajesh Kumar, Microsoft\",\n      participants: \"800+\",\n      description: \"Learn best practices for designing and implementing microservices architecture.\",\n      type: \"Webinar\",\n      status: \"Register Now\",\n      image: \"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    },\n    {\n      id: 9,\n      title: \"Career Growth for Developers\",\n      date: \"March 24, 2024\",\n      time: \"6:30 PM IST\",\n      location: \"Teams\",\n      speaker: \"Ankit Verma, Amazon\",\n      participants: \"600+\",\n      description: \"Strategies for advancing your tech career and building a strong professional network.\",\n      type: \"Webinar\",\n      status: \"Register Now\",\n      image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n    }\n  ];\n\n  const stats = [\n    { label: \"Total Events\", value: \"25+\", icon: Calendar },\n    { label: \"Participants\", value: \"3000+\", icon: Users },\n    { label: \"Prize Money\", value: \"₹20L+\", icon: Trophy },\n    { label: \"Tech Tracks\", value: \"15+\", icon: Code2 }\n  ];\n\n  return (\n    <div className=\"min-h-screen\" ref={heroRef}>\n      <Navigation />\n      \n      {/* Animated Zig-Zag Lines */}\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\n        <svg className=\"absolute inset-0 w-full h-full\">\n          <defs>\n            <linearGradient id=\"zigzagGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0, 212, 255, 0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0, 212, 255, 0.6)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0, 212, 255, 0)\" />\n            </linearGradient>\n          </defs>\n          \n          {/* Zig-zag lines */}\n          {[...Array(8)].map((_, i) => (\n            <path\n              key={i}\n              className=\"zigzag-line\"\n              d={`M ${-100 + i * 200},${50 + i * 100} Q ${100 + i * 200},${150 + i * 100} ${300 + i * 200},${50 + i * 100} T ${700 + i * 200},${50 + i * 100}`}\n              stroke=\"url(#zigzagGradient)\"\n              strokeWidth=\"2\"\n              fill=\"none\"\n              opacity=\"0.3\"\n              style={{\n                animationDelay: `${i * 0.5}s`,\n              }}\n            />\n          ))}\n        </svg>\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"min-h-screen flex items-center justify-center hero-bg circuit-pattern relative overflow-hidden pt-20\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-black/50\"></div>\n        <div className=\"container mx-auto px-6 text-center relative z-10\">\n          <h1 \n            ref={titleRef}\n            className=\"text-6xl md:text-8xl font-orbitron font-black gradient-text mb-8 glow-text\"\n            data-testid=\"events-page-title\"\n          >\n            EVENTS\n          </h1>\n          \n          <p className=\"hero-subtitle text-2xl md:text-3xl text-muted-foreground mb-12 max-w-4xl mx-auto\">\n            Join India's most exciting tech events. From hackathons to conferences, \n            level up your skills and network with the best.\n          </p>\n\n          {/* Hero Stats */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 max-w-4xl mx-auto\">\n            {stats.map((stat, index) => (\n              <div key={stat.label} className=\"hero-stats stat-card neon-border rounded-xl p-6\">\n                <stat.icon className=\"w-8 h-8 text-primary mx-auto mb-2\" />\n                <div className=\"text-3xl font-orbitron font-bold gradient-text mb-1\">\n                  {stat.value}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Enhanced Events Section with Tabs */}\n      <section className=\"py-20 relative\" ref={cardsRef}>\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n              Tech <span className=\"gradient-text\">Events</span>\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              From hackathons to webinars, discover events that shape the future of technology.\n            </p>\n          </div>\n\n          <Tabs defaultValue=\"upcoming\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-4 max-w-md mx-auto mb-12\">\n              <TabsTrigger value=\"upcoming\" className=\"text-sm\">Upcoming</TabsTrigger>\n              <TabsTrigger value=\"ongoing\" className=\"text-sm\">Live Now</TabsTrigger>\n              <TabsTrigger value=\"webinars\" className=\"text-sm\">Webinars</TabsTrigger>\n              <TabsTrigger value=\"past\" className=\"text-sm\">Past</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"upcoming\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {upcomingEvents.map((event) => (\n                  <div\n                    key={event.id}\n                    className=\"event-card group relative overflow-hidden rounded-2xl bg-card/40 backdrop-blur-xl border border-white/10 hover:border-primary/30 transition-all duration-500 hover:scale-105\"\n                    data-testid={`event-card-${event.id}`}\n                  >\n                    <div className=\"relative overflow-hidden\">\n                      <img\n                        src={event.image}\n                        alt={event.title}\n                        className=\"w-full h-48 object-cover transition-transform duration-500 group-hover:scale-110\"\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n                      \n                      <div className=\"absolute top-4 left-4\">\n                        <span className={`px-3 py-1 rounded-full text-xs font-medium backdrop-blur-sm ${\n                          event.status === 'Registration Open' ? 'bg-green-500/20 text-green-300 border border-green-500/30' :\n                          event.status === 'Early Bird' ? 'bg-blue-500/20 text-blue-300 border border-blue-500/30' :\n                          'bg-yellow-500/20 text-yellow-300 border border-yellow-500/30'\n                        }`}>\n                          {event.status}\n                        </span>\n                      </div>\n                      \n                      <div className=\"absolute top-4 right-4\">\n                        <span className=\"px-3 py-1 rounded-full text-xs font-medium bg-primary/20 text-primary border border-primary/30 backdrop-blur-sm\">\n                          {event.type}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"p-6 space-y-4\">\n                      <h3 className=\"text-xl font-orbitron font-semibold leading-tight\">{event.title}</h3>\n                      <p className=\"text-muted-foreground text-sm leading-relaxed\">{event.description}</p>\n                      \n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <Calendar className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.date}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.time}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Users className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.participants}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"pt-4\">\n                        <Button\n                          className=\"w-full bg-gradient-to-r from-primary to-accent text-white font-medium rounded-xl hover:opacity-90 transition-opacity\"\n                          data-testid={`button-register-event-${event.id}`}\n                        >\n                          Register Now\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"ongoing\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {ongoingEvents.map((event) => (\n                  <div\n                    key={event.id}\n                    className=\"event-card group relative overflow-hidden rounded-2xl bg-card/40 backdrop-blur-xl border border-green-500/30 hover:border-green-400 transition-all duration-500 hover:scale-105\"\n                    data-testid={`ongoing-event-${event.id}`}\n                  >\n                    <div className=\"relative overflow-hidden\">\n                      <img\n                        src={event.image}\n                        alt={event.title}\n                        className=\"w-full h-48 object-cover transition-transform duration-500 group-hover:scale-110\"\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n                      \n                      <div className=\"absolute top-4 left-4\">\n                        <span className=\"px-3 py-1 rounded-full text-xs font-medium bg-green-500/20 text-green-300 border border-green-500/30 backdrop-blur-sm animate-pulse\">\n                          <Wifi className=\"w-3 h-3 inline mr-1\" />\n                          {event.status}\n                        </span>\n                      </div>\n                      \n                      <div className=\"absolute top-4 right-4\">\n                        <span className=\"px-3 py-1 rounded-full text-xs font-medium bg-primary/20 text-primary border border-primary/30 backdrop-blur-sm\">\n                          {event.type}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"p-6 space-y-4\">\n                      <h3 className=\"text-xl font-orbitron font-semibold leading-tight\">{event.title}</h3>\n                      <p className=\"text-muted-foreground text-sm leading-relaxed\">{event.description}</p>\n                      \n                      {/* Progress Bar */}\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between text-xs\">\n                          <span>Progress</span>\n                          <span>{event.progress}%</span>\n                        </div>\n                        <div className=\"w-full bg-muted/30 rounded-full h-2\">\n                          <div \n                            className=\"bg-gradient-to-r from-green-500 to-green-400 h-2 rounded-full transition-all duration-1000\"\n                            style={{ width: `${event.progress}%` }}\n                          />\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <Calendar className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.date}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Users className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.participants}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.time}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"pt-4\">\n                        <Button\n                          className=\"w-full bg-gradient-to-r from-green-500 to-green-400 text-white font-medium rounded-xl hover:opacity-90 transition-opacity\"\n                          data-testid={`button-join-event-${event.id}`}\n                        >\n                          <Play className=\"w-4 h-4 mr-2\" />\n                          Join Now\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"webinars\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {webinars.map((event) => (\n                  <div\n                    key={event.id}\n                    className=\"event-card group relative overflow-hidden rounded-2xl bg-card/40 backdrop-blur-xl border border-purple-500/30 hover:border-purple-400 transition-all duration-500 hover:scale-105\"\n                    data-testid={`webinar-${event.id}`}\n                  >\n                    <div className=\"relative overflow-hidden\">\n                      <img\n                        src={event.image}\n                        alt={event.title}\n                        className=\"w-full h-48 object-cover transition-transform duration-500 group-hover:scale-110\"\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n                      \n                      <div className=\"absolute top-4 left-4\">\n                        <span className=\"px-3 py-1 rounded-full text-xs font-medium bg-purple-500/20 text-purple-300 border border-purple-500/30 backdrop-blur-sm\">\n                          <Video className=\"w-3 h-3 inline mr-1\" />\n                          {event.status}\n                        </span>\n                      </div>\n                      \n                      <div className=\"absolute top-4 right-4\">\n                        <span className=\"px-3 py-1 rounded-full text-xs font-medium bg-primary/20 text-primary border border-primary/30 backdrop-blur-sm\">\n                          {event.type}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"p-6 space-y-4\">\n                      <h3 className=\"text-xl font-orbitron font-semibold leading-tight\">{event.title}</h3>\n                      <p className=\"text-muted-foreground text-sm leading-relaxed\">{event.description}</p>\n                      \n                      <div className=\"p-3 bg-purple-500/10 rounded-lg border border-purple-500/20\">\n                        <div className=\"text-sm font-medium text-purple-300\">Speaker</div>\n                        <div className=\"text-xs text-muted-foreground\">{event.speaker}</div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <Calendar className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.date}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Clock className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.time}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4 text-primary/60\" />\n                          <span className=\"text-xs\">{event.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Users className=\"w-4 h-4 text-accent/60\" />\n                          <span className=\"text-xs\">{event.participants}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"pt-4\">\n                        <Button\n                          className=\"w-full bg-gradient-to-r from-purple-500 to-purple-400 text-white font-medium rounded-xl hover:opacity-90 transition-opacity\"\n                          data-testid={`button-register-webinar-${event.id}`}\n                        >\n                          <Video className=\"w-4 h-4 mr-2\" />\n                          Register for Webinar\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"past\" className=\"space-y-8\">\n              <div className=\"text-center py-12\">\n                <h3 className=\"text-2xl font-orbitron font-semibold mb-4\">Past Events Archive</h3>\n                <p className=\"text-muted-foreground mb-8\">Browse through our collection of successful events and download resources.</p>\n                <Button variant=\"outline\" className=\"border-primary text-primary hover:bg-primary/10\">\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  View Event Archive\n                </Button>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":23724},"client/src/pages/home.tsx":{"content":"import { useEffect } from \"react\";\nimport Navigation from \"@/components/ui/navigation\";\nimport HeroSection from \"@/components/sections/hero-section\";\nimport CommunityStats from \"@/components/sections/community-stats\";\nimport EventsSection from \"@/components/sections/events-section\";\nimport AboutSection from \"@/components/sections/about-section\";\nimport ContactSection from \"@/components/sections/contact-section\";\nimport Footer from \"@/components/ui/footer\";\n\nexport default function Home() {\n  useEffect(() => {\n    // Smooth scrolling for anchor links\n    const handleClick = (e: Event) => {\n      const target = e.target as HTMLAnchorElement;\n      if (target.tagName === \"A\" && target.getAttribute(\"href\")?.startsWith(\"#\")) {\n        e.preventDefault();\n        const targetId = target.getAttribute(\"href\")?.substring(1);\n        const targetElement = document.getElementById(targetId || \"\");\n        if (targetElement) {\n          targetElement.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n          });\n        }\n      }\n    };\n\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Navigation />\n      <HeroSection />\n      <CommunityStats />\n      <EventsSection />\n      <AboutSection />\n      <ContactSection />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":1423},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/sections/about-section.tsx":{"content":"import { motion } from \"framer-motion\";\n\nexport default function AboutSection() {\n  const highlights = [\n    {\n      title: \"Inclusive Community\",\n      description: \"Open to developers of all skill levels and backgrounds\",\n      color: \"text-primary\",\n    },\n    {\n      title: \"Real Impact\",\n      description: \"Hands-on projects and career advancement opportunities\",\n      color: \"text-accent\",\n    },\n    {\n      title: \"Global Network\",\n      description: \"Connect with developers worldwide and access international opportunities\",\n      color: \"text-primary\",\n    },\n    {\n      title: \"Innovation Focus\",\n      description: \"Cutting-edge technology and forward-thinking solutions\",\n      color: \"text-accent\",\n    },\n  ];\n\n  return (\n    <section id=\"about\" className=\"py-20 bg-gradient-to-b from-card to-background\" data-testid=\"about-section\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 1 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-8\">\n              Our <span className=\"gradient-text\">Mission</span>\n            </h2>\n            <div className=\"space-y-6 text-lg text-muted-foreground\">\n              <p data-testid=\"mission-statement\">\n                \"Building India's largest tech community through innovation, collaboration, and excellence.\"\n              </p>\n              <p data-testid=\"community-description\">\n                CodeQuity is India's fastest-growing tech community that brings together passionate hackers, \n                innovative developers, creative designers, and visionary entrepreneurs to create the future \n                of technology together.\n              </p>\n              <p data-testid=\"ecosystem-description\">\n                We're building a supportive ecosystem where developers of all skill levels can learn, \n                grow, and contribute to India's technological advancement.\n              </p>\n            </div>\n\n            {/* Impact Highlights */}\n            <div className=\"mt-12 grid grid-cols-2 gap-6\">\n              {highlights.map((highlight, index) => (\n                <motion.div\n                  key={highlight.title}\n                  className=\"neon-border rounded-lg p-4 bg-card\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`highlight-${highlight.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  <h4 className={`font-orbitron font-semibold mb-2 ${highlight.color}`}>\n                    {highlight.title}\n                  </h4>\n                  <p className=\"text-sm text-muted-foreground\">{highlight.description}</p>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          <motion.div\n            className=\"relative\"\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 1 }}\n            viewport={{ once: true }}\n          >\n            <img\n              src=\"https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n              alt=\"Tech team collaboration\"\n              className=\"rounded-xl shadow-2xl neon-border\"\n              data-testid=\"about-hero-image\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent rounded-xl\"></div>\n            \n            {/* Floating Stats */}\n            <motion.div\n              className=\"absolute top-6 right-6 bg-card/90 backdrop-blur rounded-lg p-4 neon-border\"\n              initial={{ opacity: 0, scale: 0.5 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.8, delay: 0.5 }}\n              viewport={{ once: true }}\n              data-testid=\"floating-stat-states\"\n            >\n              <div className=\"text-2xl font-orbitron font-bold text-primary\">25+</div>\n              <div className=\"text-sm text-muted-foreground\">States Covered</div>\n            </motion.div>\n            <motion.div\n              className=\"absolute bottom-6 left-6 bg-card/90 backdrop-blur rounded-lg p-4 neon-border\"\n              initial={{ opacity: 0, scale: 0.5 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.8, delay: 0.7 }}\n              viewport={{ once: true }}\n              data-testid=\"floating-stat-ambassadors\"\n            >\n              <div className=\"text-2xl font-orbitron font-bold text-accent\">10+</div>\n              <div className=\"text-sm text-muted-foreground\">Ambassadors</div>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5097},"client/src/components/sections/community-stats.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { Code, Lightbulb, GraduationCap } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function CommunityStats() {\n  const sectionRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Title animation\n      gsap.from(\".stats-title\", {\n        scrollTrigger: {\n          trigger: sectionRef.current,\n          start: \"top 80%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        y: 100,\n        opacity: 0,\n        duration: 1.2,\n        ease: \"power4.out\"\n      });\n\n      // Stats counter animation\n      gsap.from(\".stat-number\", {\n        scrollTrigger: {\n          trigger: sectionRef.current,\n          start: \"top 70%\",\n          end: \"bottom 20%\",\n          toggleActions: \"play none none reverse\"\n        },\n        scale: 0,\n        rotation: 360,\n        opacity: 0,\n        duration: 1,\n        stagger: 0.2,\n        ease: \"back.out(1.7)\"\n      });\n\n      // Feature cards with magnetic hover effect\n      gsap.set(\".feature-card\", {\n        transformOrigin: \"center center\"\n      });\n\n    }, sectionRef);\n\n    return () => ctx.revert();\n  }, []);\n  const stats = [\n    { value: \"500+\", label: \"Active Members\" },\n    { value: \"6+\", label: \"Major Events\" },\n    { value: \"25+\", label: \"Indian States\" },\n    { value: \"10+\", label: \"Countries\" },\n  ];\n\n  const features = [\n    {\n      icon: Code,\n      title: \"Connect\",\n      description: \"Connect with developers across India and beyond through our vibrant community platforms.\",\n    },\n    {\n      icon: Lightbulb,\n      title: \"Inspire\",\n      description: \"Get inspired through cutting-edge tech events, workshops, and learning experiences.\",\n    },\n    {\n      icon: GraduationCap,\n      title: \"Educate\",\n      description: \"Learn with hands-on experiences and empower the next generation of tech leaders.\",\n    },\n  ];\n\n  return (\n    <section id=\"community\" ref={sectionRef} className=\"py-20 bg-gradient-to-b from-background to-card\" data-testid=\"community-stats-section\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"stats-title text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n            Our <span className=\"gradient-text\">Community</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Join India's fastest-growing tech community that brings together passionate hackers, \n            innovative developers, creative designers, and visionary entrepreneurs.\n          </p>\n        </div>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16\">\n          {stats.map((stat, index) => (\n            <div\n              key={stat.label}\n              className=\"stat-card neon-border rounded-xl p-8 text-center hover:scale-110 transition-transform duration-300\"\n              data-testid={`stat-card-${stat.label.toLowerCase().replace(/\\s+/g, '-')}`}\n            >\n              <div className=\"stat-number text-4xl md:text-5xl font-orbitron font-bold gradient-text mb-2\">\n                {stat.value}\n              </div>\n              <p className=\"text-lg font-medium text-muted-foreground\">{stat.label}</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Community Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <div\n              key={feature.title}\n              className=\"feature-card neon-border rounded-xl p-8 bg-card hover:bg-card/80 transition-all duration-300 hover:scale-105 hover:rotate-1\"\n              data-testid={`feature-card-${feature.title.toLowerCase()}`}\n            >\n              <div className=\"text-3xl text-primary mb-4 transform hover:scale-110 transition-transform duration-300\">\n                <feature.icon />\n              </div>\n              <h3 className=\"text-xl font-orbitron font-semibold mb-4\">{feature.title}</h3>\n              <p className=\"text-muted-foreground\">{feature.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4376},"client/src/components/sections/contact-section.tsx":{"content":"import { Mail, Users, Calendar, ExternalLink } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from \"framer-motion\";\n\nexport default function ContactSection() {\n  const contactInfo = [\n    {\n      icon: Mail,\n      title: \"General Inquiries\",\n      detail: \"hello@codequity.in\",\n      color: \"text-primary\",\n    },\n    {\n      icon: Users,\n      title: \"Partnerships\",\n      detail: \"partners@codequity.in\",\n      color: \"text-accent\",\n    },\n    {\n      icon: Calendar,\n      title: \"Events\",\n      detail: \"events@codequity.in\",\n      color: \"text-primary\",\n    },\n  ];\n\n  const socialPlatforms = [\n    {\n      name: \"Twitter/X\",\n      handle: \"@CodeQuity\",\n      icon: \"fab fa-twitter\",\n      color: \"text-blue-400\",\n      url: \"https://x.com/CodeQuity\"\n    },\n    {\n      name: \"LinkedIn\",\n      handle: \"CodeQuity Community\",\n      icon: \"fab fa-linkedin\",\n      color: \"text-blue-600\",\n      url: \"https://www.linkedin.com/company/codequitycommunity/\"\n    },\n    {\n      name: \"WhatsApp\",\n      handle: \"Join Group\",\n      icon: \"fab fa-whatsapp\",\n      color: \"text-green-500\",\n      url: \"https://chat.whatsapp.com/HgPHH53f1v9HV75YOscich\"\n    },\n    {\n      name: \"Instagram\",\n      handle: \"@codequity_official\",\n      icon: \"fab fa-instagram\",\n      color: \"text-pink-500\",\n      url: \"https://www.instagram.com/codequity_official/\"\n    },\n  ];\n\n  return (\n    <section id=\"contact\" className=\"py-20 circuit-pattern\" data-testid=\"contact-section\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n            Get <span className=\"gradient-text\">Connected</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Join our community through various platforms and start your journey with India's premier tech community.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16\">\n          {/* Contact Info */}\n          <motion.div\n            className=\"space-y-8\"\n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 1 }}\n            viewport={{ once: true }}\n          >\n            <h3 className=\"text-2xl font-orbitron font-semibold mb-6\">Contact Information</h3>\n            \n            <div className=\"space-y-4\">\n              {contactInfo.map((contact, index) => (\n                <motion.div\n                  key={contact.title}\n                  className=\"flex items-center gap-4 p-4 neon-border rounded-lg bg-card\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`contact-info-${contact.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  <div className={`text-2xl ${contact.color}`}>\n                    <contact.icon />\n                  </div>\n                  <div>\n                    <div className=\"font-semibold\">{contact.title}</div>\n                    <div className=\"text-muted-foreground\">{contact.detail}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Social Platforms */}\n          <motion.div\n            className=\"space-y-8\"\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 1 }}\n            viewport={{ once: true }}\n          >\n            <h3 className=\"text-2xl font-orbitron font-semibold mb-6\">Join Our Community</h3>\n            \n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              {socialPlatforms.map((platform, index) => (\n                <motion.a\n                  key={platform.name}\n                  href={platform.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center gap-4 p-4 neon-border rounded-lg bg-card hover:bg-card/80 transition-all\"\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`social-link-${platform.name.toLowerCase().replace(/[^a-z]/g, '')}`}\n                >\n                  <div className={`text-2xl ${platform.color}`}>\n                    <i className={platform.icon}></i>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold\">{platform.name}</div>\n                    <div className=\"text-sm text-muted-foreground\">{platform.handle}</div>\n                  </div>\n                  <ExternalLink className=\"w-4 h-4 ml-auto text-muted-foreground\" />\n                </motion.a>\n              ))}\n            </div>\n\n            {/* Quick Actions */}\n            <motion.div\n              className=\"mt-8 space-y-4\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n              viewport={{ once: true }}\n            >\n              <Button\n                asChild\n                className=\"w-full bg-primary text-primary-foreground py-4 px-6 font-orbitron font-semibold hover:bg-primary/90 neon-border\"\n                data-testid=\"button-join-events\"\n              >\n                <a href=\"https://luma.com/CodeConnect?k=c\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Join Our Events\n                </a>\n              </Button>\n              <Button\n                asChild\n                variant=\"outline\"\n                className=\"w-full border-primary text-primary py-4 px-6 font-orbitron font-semibold hover:bg-primary/10 neon-border\"\n                data-testid=\"button-join-whatsapp\"\n              >\n                <a href=\"https://chat.whatsapp.com/HgPHH53f1v9HV75YOscich\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Join WhatsApp Group\n                </a>\n              </Button>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6391},"client/src/components/sections/events-section.tsx":{"content":"import { Calendar, MapPin } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from \"framer-motion\";\n\nexport default function EventsSection() {\n  const events = [\n    {\n      date: \"March 15, 2024\",\n      title: \"CodeQuity Hackathon 2024\",\n      description: \"48-hour intensive hackathon focused on building innovative solutions for real-world problems.\",\n      location: \"Virtual + Delhi\",\n      image: \"https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    },\n    {\n      date: \"March 22, 2024\",\n      title: \"AI/ML Workshop Series\",\n      description: \"Learn machine learning fundamentals and build your first AI model with industry experts.\",\n      location: \"Bangalore\",\n      image: \"https://images.unsplash.com/photo-1531482615713-2afd69097998?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    },\n    {\n      date: \"March 30, 2024\",\n      title: \"Developer Meetup Mumbai\",\n      description: \"Monthly meetup for developers to network, share knowledge, and discuss latest tech trends.\",\n      location: \"Mumbai\",\n      image: \"https://images.unsplash.com/photo-1515187029135-18ee286d815b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n    },\n  ];\n\n  return (\n    <section id=\"events\" className=\"py-20 circuit-pattern\" data-testid=\"events-section\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-orbitron font-bold mb-6\">\n            Upcoming <span className=\"gradient-text\">Events</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Join our hackathons, workshops, bootcamps, and meetups to learn, build, and network with fellow developers.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {events.map((event, index) => (\n            <motion.div\n              key={event.title}\n              className=\"event-card neon-border rounded-xl overflow-hidden\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.8, delay: index * 0.1 }}\n              viewport={{ once: true }}\n              data-testid={`event-card-${event.title.toLowerCase().replace(/[^a-z0-9]/g, '-')}`}\n            >\n              <img\n                src={event.image}\n                alt={event.title}\n                className=\"w-full h-48 object-cover\"\n              />\n              <div className=\"p-6\">\n                <div className=\"flex items-center gap-2 text-sm text-accent mb-2\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span data-testid={`event-date-${index}`}>{event.date}</span>\n                </div>\n                <h3 className=\"text-xl font-orbitron font-semibold mb-3\" data-testid={`event-title-${index}`}>\n                  {event.title}\n                </h3>\n                <p className=\"text-muted-foreground mb-4\" data-testid={`event-description-${index}`}>\n                  {event.description}\n                </p>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-muted-foreground flex items-center gap-1\" data-testid={`event-location-${index}`}>\n                    <MapPin className=\"w-4 h-4\" />\n                    {event.location}\n                  </span>\n                  <Button\n                    size=\"sm\"\n                    className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n                    data-testid={`button-register-${index}`}\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3892},"client/src/components/sections/hero-section.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { Button } from \"@/components/ui/button\";\nimport { Code, Rocket, Users, Zap, Star, Globe } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport codeQuityLogo from \"@assets/WhatsApp Image 2025-08-09 at 23.54.36_e9b4a964_1756273841031.jpg\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function HeroSection() {\n  const heroRef = useRef<HTMLDivElement>(null);\n  const logoRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const particlesRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      // Wait for elements to mount then animate\n      gsap.delayedCall(0.1, () => {\n        // Advanced logo entrance animation\n        const tl = gsap.timeline();\n        \n        tl.to(\".logo-brackets\", {\n          rotationY: 0,\n          scale: 1,\n          opacity: 1,\n          duration: 1.5,\n          ease: \"elastic.out(1, 0.5)\"\n        })\n        .to(\".logo-text\", {\n          y: 0,\n          opacity: 1,\n          letterSpacing: \"0px\",\n          duration: 1.2,\n          ease: \"power4.out\"\n        }, \"-=0.8\")\n        .to(\".hero-subtitle\", {\n          y: 0,\n          opacity: 1,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"-=0.5\")\n        .to(\".hero-description\", {\n          y: 0,\n          opacity: 1,\n          duration: 1,\n          ease: \"power3.out\"\n        }, \"-=0.3\")\n        .to(\".hero-buttons\", {\n          scale: 1,\n          opacity: 1,\n          duration: 0.8,\n          stagger: 0.1,\n          ease: \"back.out(1.7)\"\n        }, \"-=0.2\");\n\n        // Continuous floating animation for particles\n        gsap.to(\".floating-particle\", {\n          y: \"random(-100, 100)\",\n          x: \"random(-100, 100)\",\n          rotation: \"random(0, 360)\",\n          scale: \"random(0.5, 1.5)\",\n          duration: \"random(3, 8)\",\n          repeat: -1,\n          yoyo: true,\n          ease: \"sine.inOut\",\n          stagger: {\n            amount: 4,\n            from: \"random\"\n          }\n        });\n\n        // Logo breathing effect (after initial animation)\n        gsap.delayedCall(2, () => {\n          gsap.to(\".logo-brackets\", {\n            scale: 1.05,\n            duration: 2,\n            repeat: -1,\n            yoyo: true,\n            ease: \"sine.inOut\"\n          });\n        });\n\n        // Parallax effect on scroll\n        gsap.to(\".parallax-bg\", {\n          yPercent: -50,\n          ease: \"none\",\n          scrollTrigger: {\n            trigger: heroRef.current,\n            start: \"top bottom\",\n            end: \"bottom top\",\n            scrub: true\n          }\n        });\n      });\n\n    }, heroRef);\n\n    return () => ctx.revert();\n  }, []);\n\n  return (\n    <section\n      id=\"home\"\n      ref={heroRef}\n      className=\"min-h-screen flex items-center justify-center hero-bg circuit-pattern relative overflow-hidden\"\n      data-testid=\"hero-section\"\n    >\n      {/* Parallax Background */}\n      <div className=\"parallax-bg absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-black/50\"></div>\n      \n      {/* Advanced Particle System */}\n      <div className=\"absolute inset-0 pointer-events-none\" ref={particlesRef}>\n        {[...Array(50)].map((_, i) => (\n          <div\n            key={i}\n            className=\"floating-particle absolute\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              width: `${Math.random() * 4 + 1}px`,\n              height: `${Math.random() * 4 + 1}px`,\n            }}\n          >\n            <div className=\"w-full h-full bg-gradient-to-r from-primary/30 to-accent/30 rounded-full blur-sm\"></div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"container mx-auto px-6 text-center relative z-10\">\n        \n        {/* Enhanced Animated Logo */}\n        <div\n          ref={logoRef}\n          className=\"mb-8\"\n          data-testid=\"animated-logo\"\n        >\n          <div className=\"logo-brackets text-8xl md:text-9xl font-orbitron font-black gradient-text mb-4 glow-text drop-shadow-2xl\">\n            <img \n              src={codeQuityLogo} \n              alt=\"CodeQuity Logo\" \n              className=\"w-32 h-32 md:w-40 md:h-40 object-contain mx-auto\"\n            />\n          </div>\n          <h1 className=\"logo-text text-4xl md:text-6xl font-orbitron font-bold mb-4\">\n            CODE<span className=\"gradient-text\">QUITY</span>\n          </h1>\n        </div>\n\n        {/* Enhanced Hero Content */}\n        <div ref={contentRef} data-testid=\"hero-content\">\n          <p className=\"hero-subtitle text-xl md:text-2xl text-muted-foreground mb-4 max-w-4xl mx-auto font-medium\">\n            India's Premier Tech Community\n          </p>\n          <h2 className=\"hero-description text-2xl md:text-3xl font-medium mb-8 max-w-4xl mx-auto leading-relaxed\">\n            Building India's Largest Tech Community Through{\" \"}\n            <span className=\"gradient-text font-semibold\">Innovation</span>,{\" \"}\n            <span className=\"gradient-text font-semibold\">Collaboration</span> &{\" \"}\n            <span className=\"gradient-text font-semibold\">Excellence</span> 🇮🇳\n          </h2>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n            <Button\n              asChild\n              className=\"hero-buttons bg-primary text-primary-foreground px-8 py-4 font-semibold hover:bg-primary/90 neon-border animate-glow transform hover:scale-105 transition-transform\"\n              data-testid=\"button-join-community\"\n            >\n              <a href=\"https://chat.whatsapp.com/HgPHH53f1v9HV75YOscich\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Users className=\"w-5 h-5 mr-2\" />\n                Join Community\n              </a>\n            </Button>\n            <Button\n              asChild\n              variant=\"outline\"\n              className=\"hero-buttons border-primary text-primary px-8 py-4 font-semibold hover:bg-primary/10 neon-border transform hover:scale-105 transition-transform\"\n              data-testid=\"button-explore-events\"\n            >\n              <a href=\"https://luma.com/CodeConnect?k=c\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Rocket className=\"w-5 h-5 mr-2\" />\n                Explore Events\n              </a>\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Floating Elements */}\n      <motion.div\n        className=\"absolute top-1/4 left-10 text-4xl text-primary/40\"\n        animate={{ \n          y: [-15, 15, -15],\n          x: [-5, 5, -5],\n          rotate: [-5, 5, -5]\n        }}\n        transition={{ duration: 4, repeat: Infinity, ease: \"easeInOut\" }}\n        data-testid=\"floating-code-icon\"\n      >\n        <Code className=\"drop-shadow-lg\" />\n      </motion.div>\n      <motion.div\n        className=\"absolute top-1/3 right-10 text-3xl text-accent/40\"\n        animate={{ \n          y: [-12, 12, -12],\n          x: [-3, 3, -3],\n          rotate: [5, -5, 5]\n        }}\n        transition={{ duration: 3.5, repeat: Infinity, ease: \"easeInOut\", delay: 0.5 }}\n        data-testid=\"floating-rocket-icon\"\n      >\n        <Rocket className=\"drop-shadow-lg\" />\n      </motion.div>\n      <motion.div\n        className=\"absolute bottom-1/4 left-1/4 text-5xl text-primary/30\"\n        animate={{ \n          y: [-20, 20, -20],\n          scale: [1, 1.1, 1],\n          rotate: [-3, 3, -3]\n        }}\n        transition={{ duration: 5, repeat: Infinity, ease: \"easeInOut\", delay: 1 }}\n        data-testid=\"floating-users-icon\"\n      >\n        <Users className=\"drop-shadow-lg\" />\n      </motion.div>\n      <motion.div\n        className=\"absolute top-3/4 right-1/4 text-3xl text-accent/30\"\n        animate={{ \n          y: [-10, 10, -10],\n          x: [-8, 8, -8],\n          rotate: [0, 360, 0]\n        }}\n        transition={{ duration: 6, repeat: Infinity, ease: \"easeInOut\", delay: 1.5 }}\n        data-testid=\"floating-zap-icon\"\n      >\n        <Zap className=\"drop-shadow-lg\" />\n      </motion.div>\n      <motion.div\n        className=\"absolute top-1/2 left-16 text-2xl text-primary/20\"\n        animate={{ \n          scale: [1, 1.3, 1],\n          rotate: [0, 180, 360],\n          opacity: [0.2, 0.6, 0.2]\n        }}\n        transition={{ duration: 4, repeat: Infinity, ease: \"easeInOut\", delay: 2 }}\n        data-testid=\"floating-star-icon\"\n      >\n        <Star className=\"drop-shadow-lg\" />\n      </motion.div>\n      <motion.div\n        className=\"absolute bottom-1/3 right-16 text-4xl text-accent/25\"\n        animate={{ \n          y: [-18, 18, -18],\n          rotate: [-10, 10, -10],\n          scale: [0.8, 1.2, 0.8]\n        }}\n        transition={{ duration: 7, repeat: Infinity, ease: \"easeInOut\", delay: 2.5 }}\n        data-testid=\"floating-globe-icon\"\n      >\n        <Globe className=\"drop-shadow-lg\" />\n      </motion.div>\n    </section>\n  );\n}\n","size_bytes":9008},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/footer.tsx":{"content":"import codeQuityLogo from \"@assets/WhatsApp Image 2025-08-09 at 23.54.36_e9b4a964_1756273841031.jpg\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"py-12 bg-background border-t border-border\" data-testid=\"footer\">\n      <div className=\"container mx-auto px-6\">\n        <div className=\"text-center\">\n          <div className=\"flex items-center justify-center space-x-3 mb-4\">\n            <img \n              src={codeQuityLogo} \n              alt=\"CodeQuity Logo\" \n              className=\"w-12 h-12 object-contain\"\n              data-testid=\"footer-logo-image\"\n            />\n            <span className=\"text-2xl font-orbitron font-semibold gradient-text\" data-testid=\"footer-logo-text\">\n              CodeQuity\n            </span>\n          </div>\n          <p className=\"text-muted-foreground mb-6\" data-testid=\"footer-tagline\">\n            Together, we're building the future of Indian tech! 🇮🇳\n          </p>\n          <div className=\"flex justify-center items-center space-x-6 text-sm text-muted-foreground\">\n            <span data-testid=\"footer-made-with-love\">Made with ❤️ for the Indian developer community</span>\n            <span>•</span>\n            <span data-testid=\"footer-community-love\">Community Love Made in India</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":1343},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Menu, X } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\nimport codeQuityLogo from \"@assets/WhatsApp Image 2025-08-09 at 23.54.36_e9b4a964_1756273841031.jpg\";\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navLinks = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/community\", label: \"Community\" },\n    { href: \"/events\", label: \"Events\" },\n    { href: \"/about\", label: \"About\" },\n    { href: \"/contact\", label: \"Contact\" },\n  ];\n\n  return (\n    <nav className=\"fixed top-0 w-full z-50 nav-blur border-b border-border\" data-testid=\"main-navigation\">\n      <div className=\"container mx-auto px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\n            <img \n              src={codeQuityLogo} \n              alt=\"CodeQuity Logo\" \n              className=\"w-10 h-10 object-contain\"\n              data-testid=\"logo-image\"\n            />\n            <span className=\"text-xl font-orbitron font-semibold gradient-text\" data-testid=\"logo-text\">\n              CodeQuity\n            </span>\n          </Link>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navLinks.map((link) => (\n              <Link\n                key={link.href}\n                href={link.href}\n                className={`hover:text-primary transition-colors ${\n                  location === link.href ? 'text-primary' : ''\n                }`}\n                data-testid={`nav-link-${link.label.toLowerCase()}`}\n              >\n                {link.label}\n              </Link>\n            ))}\n          </div>\n          \n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden\"\n            onClick={() => setIsOpen(!isOpen)}\n            data-testid=\"mobile-menu-button\"\n          >\n            {isOpen ? (\n              <X className=\"h-6 w-6\" />\n            ) : (\n              <Menu className=\"h-6 w-6\" />\n            )}\n          </button>\n        </div>\n        \n        {/* Mobile Navigation */}\n        {isOpen && (\n          <div className=\"md:hidden mt-4 pb-4 border-t border-border\" data-testid=\"mobile-menu\">\n            {navLinks.map((link) => (\n              <Link\n                key={link.href}\n                href={link.href}\n                className={`block py-3 hover:text-primary transition-colors ${\n                  location === link.href ? 'text-primary' : ''\n                }`}\n                onClick={() => setIsOpen(false)}\n                data-testid={`mobile-nav-link-${link.label.toLowerCase()}`}\n              >\n                {link.label}\n              </Link>\n            ))}\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":2886},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}